@model QRefTrain3.ViewModel.QuizzViewModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Quizz</title>
    @Styles.Render("~/Content/css")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</head>
<body>
    @if (Model.StartTime.HasValue)
    {
        <div id="timer" class="timer"></div>
        @Html.HiddenFor(m => m.StartTime.Value)
    }
        <div>
            <!-- For each Question, display a new div with the Title, the question code, the question text, the video if there is one, then the possible answers depending on the type of answers-->
            @using (Html.BeginForm("QuizzResult", "Home"))
            {
                @Html.HiddenFor(m => Model.ResultType)
                @Html.HiddenFor(m => Model.SuiteID)
                for (int i = 0; i < Model.DisplayedQuestions.Count; i++)
                {
                    @Html.HiddenFor(m => m.DisplayedQuestions[i].Id)
                    <div class="QuizzQuestion">
                        <div class="QuizzQuestionTitle">(@Model.DisplayedQuestions[i].PublicId) @Resources.QuestionResource.ResourceManager.GetString(Model.DisplayedQuestions[i].QuestionText)</div>
                        @if (!String.IsNullOrEmpty(@Model.DisplayedQuestions[i].GifName))
                        {
                            /**
                             * Obsolete from when I used video
                            <div class="QuizzQuestionVideoContainer">
                                <iframe class="QuizzQuestionVideo" id="ytplayer" type="text/html"
                                        src="@Model.DisplayedQuestions[i].VideoURL"
                                        frameborder="0"></iframe>
                            </div>
                            **/

                            <iframe src='@Model.DisplayedQuestions[i].GifName?autoplay=0' frameborder='0' scrolling='no' width='640' height='346'></iframe>

                        }
                        <div class="btn-group-toggle" data-toggle="buttons">

                            @for (int j = 0; j < Model.DisplayedQuestions[i].Answers.Count; j++)
                            {
                                <label class="btn btn-light halfpageItem halfpageItemCollapse">
                                    @Html.CheckBoxFor(m => m.DisplayedQuestions[i].Answers[j].IsSelected)
                                    <span class="verticalCenter">@Resources.QuestionResource.ResourceManager.GetString(Model.DisplayedQuestions[i].Answers[j].AnswerText)</span>
                                </label>
                                @Html.HiddenFor(m => m.DisplayedQuestions[i].Answers[j].Id)
                            }
                        </div>
                        @if (i != Model.DisplayedQuestions.Count - 1)
                        {
                            <div class="next">
                                <img src="~/Elements/expand_arrow.png" alt="Next" height="80" width="160" />
                            </div>
                        }
                    </div>
                    if (i != Model.DisplayedQuestions.Count - 1)
                    {
                        <hr />
                    }
                }
                <input id="submit" type="submit" value="@Resources.Resource.Quiz_ValidateAnswer" class="btn-lg btn-primary QuizzValidationButton" />
            }
        </div>
    <div class="bigBottomPadding"></div>
</body>
</html>

<script>
    $(".next").click(function () {
        $('html,body').animate({ scrollTop: $(this).parent().next().offset().top }, 'fast');

    });
    /*
    function createElement(type, callback) {
        var element = document.createElement(type);

        callback(element);

        return element;
    }

    function freezeGif(img) {
        var width = img.width,
            height = img.height,
            canvas = createElement('canvas', function (clone) {
                clone.width = width;
                clone.height = height;
            }),
            attr,
            i = 0;

        var freeze = function () {
            canvas.getContext('2d').drawImage(img, 0, 0, width, height);

            for (i = 0; i < img.attributes.length; i++) {
                attr = img.attributes[i];

                if (attr.name !== '"') { // test for invalid attributes
                    canvas.setAttribute(attr.name, attr.value);
                }
            }

            canvas.style.position = 'absolute';

            img.parentNode.insertBefore(canvas, img);
            img.style.opacity = 0;
        };

        if (img.complete) {
            freeze();
        } else {
            img.addEventListener('load', freeze, true);
        }
    }

    function freezeAllGifs() {
        return new Array().slice.apply(document.images).map(freezeGif);
    }

    freezeAllGifs();*/

</script>

@if (Model.StartTime.HasValue)
{
    <script>
    $(document).ready(function () {
        //10 minutes
        var totalTime = 600000;
        var msStartTime = @(new DateTimeOffset(Model.StartTime.Value).ToUnixTimeMilliseconds());
        var showtimer = true;
        function updateTimer() {
            var timeString = "";
            var timeLeft = totalTime - (new Date().getTime() - msStartTime);
            if (timeLeft > 0) {
                var date = new Date(timeLeft);
                var minuteString = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();
                var secondString = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();
                document.getElementById("timer").innerHTML = minuteString + ":" + secondString;
            } else {
                if (timeLeft < -5000) {
                    document.getElementById('submit').click();
                }
                document.getElementById("timer").innerHTML = "00:00";
            }
        };
        $("#timer").click(function () {
            showtimer = !showtimer;
            if (!showtimer) {
                document.getElementById("timer").innerHTML = "";
            } else {
                updateTimer();
            }
        });
        window.setInterval(function () {
            if (!showtimer) {
                return;
            }
            updateTimer();
        }, 1000);
    });
    </script>
}
